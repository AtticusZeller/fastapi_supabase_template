name: Code Quality Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-format:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          uv pip install pre-commit --sytem
          uv pip install -e . --system

      - name: Run pre-commit checks
        run: pre-commit run --all-files

  test-coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    env:
      PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      POSTGRES_SERVER: ${{ secrets.POSTGRES_SERVER }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      FIRST_SUPERUSER: ${{ secrets.FIRST_SUPERUSER }}
      FIRST_SUPERUSER_PASSWORD: ${{ secrets.FIRST_SUPERUSER_PASSWORD }}
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install brew
        run: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

      - name: Install Supabase
        run: |
          echo >> /home/runner/.bashrc
          echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' >> /home/runner/.bashrc
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          HOMEBREW_NO_INSTALL_CLEANUP=1
          brew install supabase/tap/supabase
          bash scripts/update-env.sh
          cd backend
          uv sync --all-extras --dev
          uv run bash scripts/pre-start.sh
          uv run bash scripts/tests-start.sh

      - name: Run tests with coverage
        run: |
          cd backend
          uv pip install pytest pytest-cov
          uv run python -m pytest --cov=app --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./backend/coverage.xml
          fail_ci_if_error: true
          verbose: true
