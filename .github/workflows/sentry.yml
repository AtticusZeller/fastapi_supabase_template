name: Sentry Release

on:
  push:
    branches: [main, develop]
    tags:
      - 'v*'

jobs:
  create-sentry-release:
    runs-on: ubuntu-latest
    env:
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
      SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
      ENVIRONMENT: ${{ startsWith(github.ref, 'refs/tags/') && 'production' || github.ref == 'refs/heads/main' && 'staging' || 'development' }}
    
    # Seulement exécuter si le secret SENTRY_AUTH_TOKEN existe
    if: ${{ secrets.SENTRY_AUTH_TOKEN != '' }}
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Récupérer tout l'historique pour avoir accès aux commits pour le changelog
      
      - name: Déterminer la version
        id: version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/main ]]; then
            VERSION=$(git rev-parse --short HEAD)-staging
          else
            VERSION=$(git rev-parse --short HEAD)-dev
          fi
          echo "release_version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version déterminée: $VERSION"
      
      - name: Créer la release Sentry
        uses: getsentry/action-release@v1
        with:
          auth_token: ${{ secrets.SENTRY_AUTH_TOKEN }}
          org: ${{ secrets.SENTRY_ORG }}
          project: ${{ secrets.SENTRY_PROJECT }}
          environment: ${{ env.ENVIRONMENT }}
          version: ${{ steps.version.outputs.release_version }}
          ignore_missing: true
          ignore_empty: true
