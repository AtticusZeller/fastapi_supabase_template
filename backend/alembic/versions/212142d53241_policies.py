"""policies

Revision ID: 212142d53241
Revises: 
Create Date: 2025-03-07 16:10:53.375337

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '212142d53241'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('item',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['auth.users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.execute('ALTER TABLE item ENABLE ROW LEVEL SECURITY;')
    op.execute('\n                    CREATE POLICY "item_select" ON item\n                    FOR SELECT\n                \n    USING (\n                auth.uid() = owner_id OR\n                auth.role() = \'service_role\'\n            );')
    op.execute('\n                    CREATE POLICY "item_insert" ON item\n                    FOR INSERT\n                \n    WITH CHECK (\n                auth.uid() = owner_id OR\n                auth.role() = \'service_role\'\n            );')
    op.execute('\n                    CREATE POLICY "item_update" ON item\n                    FOR UPDATE\n                \n    USING (\n                auth.uid() = owner_id OR\n                auth.role() = \'service_role\'\n            )\n    WITH CHECK (\n                auth.uid() = owner_id OR\n                auth.role() = \'service_role\'\n            );')
    op.execute('\n                    CREATE POLICY "item_delete" ON item\n                    FOR DELETE\n                \n    USING (\n                auth.uid() = owner_id OR\n                auth.role() = \'service_role\'\n            );')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('ALTER TABLE item DISABLE ROW LEVEL SECURITY;')
    op.execute('DROP POLICY IF EXISTS "item_delete" ON item;')
    op.execute('DROP POLICY IF EXISTS "item_update" ON item;')
    op.execute('DROP POLICY IF EXISTS "item_insert" ON item;')
    op.execute('DROP POLICY IF EXISTS "item_select" ON item;')
    op.drop_table('item')
    # ### end Alembic commands ###